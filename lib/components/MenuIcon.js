const size = 30;const lineW = 78; // %const lineH = Math.floor(size / 12);const transY = Math.ceil(0.25 * size);export default (client, id) => {  return client.hoc({    id,    classes: {      wrapper: `        position: absolute;        display: flex;        flex-flow: column;        justify-content: center;        height: ${size}px;        width: ${size}px;        cursor: pointer;      `,      line: `        position: absolute;        width: ${lineW}%;        left: ${0.5 * (100 - lineW)}%;        height: ${lineH}px;        border-radius: ${size}px;        transition: all .4s cubic-bezier(0.65, 0.04, 0.29, 0.97);        transform-origin: center center;      `,    },    styles: {      wrapper: ({ inStyle }) => `        ${inStyle}      `,      top: ({ isOpen, color }) => `        background: ${color};        transform: translateY(${isOpen ? 0 : -transY}px) rotateZ(${isOpen ? 45 : 0}deg);      `,      middle: ({ isOpen, color }) => `        background: ${color};        opacity: ${isOpen ? 0 : 1};      `,      bottom: ({ isOpen, color }) => `        background: ${color};        transform: translateY(${isOpen ? 0 : transY}px) rotateZ(${isOpen ? -45 : 0}deg);      `,    },    render({ props, classes, styles }) {      return (        <div style={styles.wrapper(props)} class={classes.wrapper} onclick={props.onClick}>          <div class={classes.line} style={styles.top(props)}/>          <div class={classes.line} style={styles.middle(props)}/>          <div class={classes.line} style={styles.bottom(props)}/>        </div>      );    }  });};